junos os fundamentals

junos os is used for routing, switching, and
security devices

junos os is divided into multiple parts 
a robust modular os 
if one process fails the whole system does not
freebsd or linux

junos os is a single software release 

separation of control and forwarding
routing and switching process are separated from 
forwarding frames and packets
goal : clean separation of control and forwarding functions

routing engine (RE)
brain of the platform, responsible for performing
protocol updates and system management
acts as the control plane 
based on x86 or powerpc
maintains the routing table, bridging table, and forwarding table
connects to the packet forwarding engine through an internal link 

packet forwarding engine (PFE)
runs on separate hardware and forwards transit traffic
uses application speficif IC (ASIC)
central processing component
synchronized copy of the forwarding table 
uses layer 2 and 3 forwarding table 
policers, state of firewalls, class of services 

transit traffic
traffic entering ingress port will be forwarded
by forwarding plane
PFE uses the copied forwarding table
junos os can maintain high performance by doing so 
can be multicast and unicast 

exception traffic 
does not pass through the local device 
processed by the local system 
requires special handling
ex : routing protocol updates, ip packets with the ip options field
rate limited on the internal link to protect from dos attacks

overview of junos devices 
provides end to end ip infrastructure
routing devices : ptx series, mx series, acx series 
switching devices : ex series, qfx series 
security devices : srx series, 
sdn products : nfx series, contrail cloud, northstar controller, mplsview

junos os can also run as a vm using vmware or kvm 
vmx virtual router 
software emulation of router 
ensures that vmx packet handling is identical to physical router 


junos cli 

junos os offers 2 ui : cli & j web interface
junos cli : text based command shell, can be accessed through out of band serial console
j-web interface : web based GUI using http or https, installed on most platform running the junos os

junos os requires username and password
when logging in non root users are placed into the CLI automatically 
amnesiac - nama hostname 

start cli : type cli 
logout : exit 

cli modes : operational & configuration 
operational : monitor, ping, show, test, traceroute
used for monitoring and troubleshooting 
sign : >

configuration : configure interface, protocol, user access
sign : #

type ? for help (mirip cisco) 

clear ? atau ? aja bisa

command help

help topic | help reference | help apropos
help apropos archive 
help topic interfaces ? 

command bisa dipersingkat
sh int 
set cli complete-on-space off - mematikan autocomplete 
gunakan tab untuk melengkapi command 


operator pipe | 
co : show route | ? 

cli operational mode 
show ospf interface 


operational mode capabilities
enter configuration mode
control the cli environment
exit cli
monitor and troubleshoot
  clear, monitor, ping, show 
copy files 

konfigurasi tidak langsung disimpan
active configuration 
  the configuration currently operational on the system 
candidate configuration 
  temporary configuration that could become active configuration 
 

untuk mengaktifkan konfigurasi candidate diperlukan konfirmasi dari cli
jika konfigurasi benar maka akan diaktifkan

konfigurasi lama dapat diaktifkan dengan perintah "rollback"
os dapat menyimpan maksimal 50 konfigurasi 

untuk masuk ke configuration
"configure" (kalo di cisco conf t)

beberapa user dapat memasuki mode configuration
"configure exclusive" untuk membuat hanya satu user yang dapat memasuki mode configuration

untuk membuat beberapa user memasuki config mode
"configure private" perubahan akan terjadi pada mesin private

pada config private jika terdapat dua user yg melakukan perubahan yg sama
maka perubahan dari user kedua tidak akan berpengaruh hingga user pertama 
memasukkan perintah commit 

perintah pada mode operational dan config berbeda (independen)

contoh konfigurasi kandidat
user@router# set services ssl traceoptions level brief 
user@router# show services
ssl { 
    traceoptions {
        level brief;
    }
}

moving between levels
edit 
  like a change directory command
  user@router# edit protocols ospf area 51 stub
up
  move up one level from the current position 
up n (n=2,3, st)
  move up n level
top
  move to thr top of the configuration hierarchy
  top show system services 
exit
  moves to the previous, higher level in the hierarchy
  

adding configuration statements
use set
  ex : user@router# set ftp

use delete to remove configuration
  ex : user@router# delete telnet 
  wildcard delete interfaces ge-1/*

use deactivate
  deactivate interfaces (nama interface)
  activate interfaces 
  
additional commands
rename
replace
copy

helpful configruation
deactivate interfaces 
insert term three before term two
annotate name-server "adding new name servers"



viewing the candidate configuration
show system services 
edit system services

show system services | display set 

committing a configuration (menyimpan konfigurasi)
  user@router# commit 

validating syntax
  user@router# commit check 

remote configuration
  commit confirmed 
  
scheduled commits 
  commit at 21:00:00
  commit comment "changed ospf configuration"
  commit and-quit 
  
comparing configuration file differences 
  compare candidate and active config -> show | compare
  compare active and historical config -> show configuration | compare rollback (number)
  compare arbitrary files -> file compare files (file1) (file2)
  
backing out of configuration changes
rollback (version)
  ex : rollback 1, rollback 49
  
set max-configurations-on-flash -> menambah jumlah rollback yang tersedia (defaultnya 50)
  
saving configuration files
  save (filename) -> akan disimpan pada user jika tidak ditulis directorynya
  
loading configuration files
  load ?

using run command
  execute operational mode commands while in config mode 
  
  
J-WEB INTERFACE

  








