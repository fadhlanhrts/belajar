WRAPPER CLASS

primitif : lebih cepat 
reference : banyak built in method 

mengubah data primitif menjadi reference 
boolean -> Boolean
int -> Integer

autoboxing : mengubah data primitif menjadi wrapper 
Boolean a = true;
Integer d = 23;

beberapa method pada kelas wrapper 
a.compareTo(12);
a.toString()

unboxing : mengubah kelas wrapper menjadi data primitif 




ARRAYLIST
resizable array, only stores reference data types

ArrayList<String> food = new ArrayList<String>();

food.add("pizza");
food.add("hamburger");
food.add("hot dog");

food.set(0, "sushi");
food.remove(1);

for(int i=0;i<food.size();i++){
  System.out.println(food.get(i));
}




2D ARRAYLIST

ArrayList<ArrayList<String>> grocerylist = new ArrayList();


ArrayList<String> bakerylist = new ArrayList<String>();
bakerylist.add("pasta");
bakerylist.add("donut");

ArrayList<String> prodlist = new ArrayList<String>();
prodlist.add("tomato");
prodlist.add("peppers");

grocerylist.add(bakerylist);
grocerylist.add(prodlist);

grocerylist.get(0).get(1)





FOR EACH LOOP

String[] animal = {"cat", "dog", "mouse"};
for(String i : animal) {
  System.out.println(i);
}

menggunakan collection(arraylist)
ArrayList<String> animal = new ArrayList<String>();
animal.add("cat");
animal.add("dog");
animal.add("mouse");

for(String i : animal) {
  System.out.println(i);
}

FINAL
variabel tidak dapat diubah

ABSTRACTION
adds layer of security
public abstract class Vehicle {
  abstract void go();
  
}


